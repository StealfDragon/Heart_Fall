{
  "associatedLayout": "Stage",
  "lastChangeTimeStamp": 0,
  "name": "HeroFSMJump",
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Action",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "AnimatableCapability::AnimatableBehavior::SetName"
              },
              "parameters": [
                "Hero",
                "Animation",
                "=",
                "\"Jump\""
              ]
            },
            {
              "type": {
                "value": "SetNumberObjectVariable"
              },
              "parameters": [
                "Hero",
                "hasJumped",
                "=",
                "1"
              ]
            },
            {
              "type": {
                "value": "PlatformBehavior::SimulateJumpKey"
              },
              "parameters": [
                "HeroHitbox",
                "PlatformerObject"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Comment",
          "color": {
            "b": 109,
            "g": 230,
            "r": 255,
            "textB": 0,
            "textG": 0,
            "textR": 0
          },
          "comment": "These events are used to ensure that the player cannot hold a jump, dash, or attack button, and have the action spam whenever the hero switches states.\nThe variables listed must be 0 in order for the player to use the action again, so by not setting them back until the button is released we avoid spamming.\nDo avoid jump spamming, we do n"
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Can only attack once",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Gamepads::C_Button_pressed"
                  },
                  "parameters": [
                    "",
                    "1",
                    "gamepadAttack",
                    ""
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "KeyFromTextPressed"
                  },
                  "parameters": [
                    "",
                    "keyboardAttack"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "hasAttacked",
                    "=",
                    "0"
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Can only dash once",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "Gamepads::C_Button_pressed"
                  },
                  "parameters": [
                    "",
                    "1",
                    "gamepadDash",
                    ""
                  ]
                },
                {
                  "type": {
                    "inverted": true,
                    "value": "KeyFromTextPressed"
                  },
                  "parameters": [
                    "",
                    "keyboardDash"
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "hasDashed",
                    "=",
                    "0"
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Jump Movement",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Movement actions are in this state so the hero can change direction while jumping, without switching to the run animation."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "Gamepads::C_Button_pressed"
                      },
                      "parameters": [
                        "",
                        "1",
                        "gamepadLeft",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyFromTextPressed"
                      },
                      "parameters": [
                        "",
                        "keyboardLeft"
                      ]
                    },
                    {
                      "type": {
                        "value": "Gamepads::C_Axis_pushed"
                      },
                      "parameters": [
                        "",
                        "1",
                        "\"LEFT\"",
                        "\"LEFT\"",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "PlatformBehavior::SimulateLeftKey"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "FlippableCapability::FlippableBehavior::FlippedX"
                      },
                      "parameters": [
                        "Hero",
                        "Flippable"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "FlippableCapability::FlippableBehavior::FlipX"
                      },
                      "parameters": [
                        "Hero",
                        "Flippable",
                        "yes"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Or"
                  },
                  "parameters": [],
                  "subInstructions": [
                    {
                      "type": {
                        "value": "Gamepads::C_Button_pressed"
                      },
                      "parameters": [
                        "",
                        "1",
                        "gamepadRight",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "KeyFromTextPressed"
                      },
                      "parameters": [
                        "",
                        "keyboardRight"
                      ]
                    },
                    {
                      "type": {
                        "value": "Gamepads::C_Axis_pushed"
                      },
                      "parameters": [
                        "",
                        "1",
                        "\"LEFT\"",
                        "\"RIGHT\"",
                        ""
                      ]
                    }
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "PlatformBehavior::SimulateRightKey"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "FlippableCapability::FlippableBehavior::FlippedX"
                      },
                      "parameters": [
                        "Hero",
                        "Flippable"
                      ]
                    },
                    {
                      "type": {
                        "value": "BuiltinCommonInstructions::Once"
                      },
                      "parameters": []
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "FlippableCapability::FlippableBehavior::FlipX"
                      },
                      "parameters": [
                        "Hero",
                        "Flippable",
                        "no"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": []
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Transition",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Hit",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Transition to the hit state if:\nThe player is not currently invulnerable (Opacity < 255).\nThe player collides with a member of the DamageToHero group."
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "Opacity"
                  },
                  "parameters": [
                    "Hero",
                    "=",
                    "255"
                  ]
                },
                {
                  "type": {
                    "value": "CollisionNP"
                  },
                  "parameters": [
                    "Hero",
                    "DamageToHero",
                    "",
                    "",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetNumberObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "heroHP",
                    "=",
                    "clamp(Hero.heroHP - DamageToHero.enemyDMG, 0, Hero.heroMaxHP)"
                  ]
                },
                {
                  "type": {
                    "value": "SetStringObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "heroFSM",
                    "=",
                    "\"Hit\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Idle",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "PlatformBehavior::IsOnFloor"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                },
                {
                  "type": {
                    "value": "AnimatableCapability::AnimatableBehavior::Name"
                  },
                  "parameters": [
                    "Hero",
                    "Animation",
                    "=",
                    "\"Jump\""
                  ]
                },
                {
                  "type": {
                    "value": "AnimatableCapability::AnimatableBehavior::HasAnimationEnded"
                  },
                  "parameters": [
                    "Hero",
                    "Animation"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetStringObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "heroFSM",
                    "=",
                    "\"Idle\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        },
        {
          "colorB": 228,
          "colorG": 176,
          "colorR": 74,
          "creationTime": 0,
          "name": "Falling",
          "source": "",
          "type": "BuiltinCommonInstructions::Group",
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "AnimatableCapability::AnimatableBehavior::Name"
                  },
                  "parameters": [
                    "Hero",
                    "Animation",
                    "=",
                    "\"Jump\""
                  ]
                },
                {
                  "type": {
                    "value": "AnimatableCapability::AnimatableBehavior::HasAnimationEnded"
                  },
                  "parameters": [
                    "Hero",
                    "Animation"
                  ]
                },
                {
                  "type": {
                    "value": "PlatformBehavior::IsFalling"
                  },
                  "parameters": [
                    "HeroHitbox",
                    "PlatformerObject"
                  ]
                },
                {
                  "type": {
                    "value": "BuiltinCommonInstructions::Once"
                  },
                  "parameters": []
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetStringObjectVariable"
                  },
                  "parameters": [
                    "Hero",
                    "heroFSM",
                    "=",
                    "\"Fall\""
                  ]
                }
              ]
            }
          ],
          "parameters": []
        }
      ],
      "parameters": []
    }
  ]
}